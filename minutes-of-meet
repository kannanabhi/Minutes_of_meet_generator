{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"minutes-of-meet","provenance":[],"collapsed_sections":["f6J8u2-k5cR1","_tFNbRRW7Ng6"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"P10-T6RL5wxq"},"source":["# mount your google drive\n","from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8vlH5qIB6O6Q"},"source":["# change your working directory\n","%cd /content/drive/MyDrive/Projects/minutes-of-meet"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uVcl0yKv6bMc"},"source":["# check if you're in the correct directory\n","!ls"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"FYolCO7V4__V"},"source":["**Installing All Requirements**"]},{"cell_type":"code","metadata":{"id":"QEa2j-ik6aCW"},"source":["#Installing all requirements\n","!pip install -r requirements.txt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"QVgp4Hz55MWp"},"source":["**Importing ASR & NLP Libraries**"]},{"cell_type":"code","metadata":{"id":"iaO3S52M7CXB"},"source":["# asr libraries\n","from pydub.audio_segment import read_wav_audio\n","from werkzeug.utils import secure_filename\n","import os\n","from IPython.display import Javascript\n","from google.colab import output\n","from base64 import b64decode\n","\n","#Python File Containing the Functions\n","import engine\n","\n","# nlp libraries\n","from transformers import AutoTokenizer, AutoModelForSeq2SeqLM"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"f6J8u2-k5cR1"},"source":["# **Audio Preprocessing**"]},{"cell_type":"code","metadata":{"id":"dPOQGSfc_ICA"},"source":["#@title Upload an Audio file \n","\n","#Enter File path\n","raw_audio = \"SampleAudio/weekly-meeting-converted.mp3\""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Xx-KJtsbCRf6","cellView":"form"},"source":["# @title Helper Function for Recording Audio \n","\n","RECORD = \"\"\"\n","const sleep  = time => new Promise(resolve => setTimeout(resolve, time))\n","const b2text = blob => new Promise(resolve => {\n","  const reader = new FileReader()\n","  reader.onloadend = e => resolve(e.srcElement.result)\n","  reader.readAsDataURL(blob)\n","})\n","var record = time => new Promise(async resolve => {\n","  stream = await navigator.mediaDevices.getUserMedia({ audio: true })\n","  recorder = new MediaRecorder(stream)\n","  chunks = []\n","  recorder.ondataavailable = e => chunks.push(e.data)\n","  recorder.start()\n","  await sleep(time)\n","  recorder.onstop = async ()=>{\n","    blob = new Blob(chunks)\n","    text = await b2text(blob)\n","    resolve(text)\n","  }\n","  recorder.stop()\n","})\n","\"\"\"\n","\n","def record(sec=10):\n","  display(Javascript(RECORD))\n","  s = output.eval_js('record(%d)' % (sec*1000))\n","  b = b64decode(s.split(',')[1])\n","  with open('audio/audio.wav','wb') as f:\n","    f.write(b)\n","  return 'audio/audio.wav'  # or webm ?"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cOWIgORGCZky"},"source":["#@title Record an Audio File\n","\n","#Enter the number of Seconds for Audio File as params\n","raw_audio = record(10)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Bc3_O0SYCQRx"},"source":["# @title Converting Audio to Compatible Format\n","# convert the raw_audio to a format that the model can understand [bitrate = 16KHz, channel = mono]\n","processed_audio = engine.pre_process_audio(raw_audio)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_tFNbRRW7Ng6"},"source":["# **Audio Transcription**"]},{"cell_type":"markdown","metadata":{"id":"ARL5o1UC5l99"},"source":["**Transcribing Audio File to Text**"]},{"cell_type":"code","metadata":{"id":"huQi05FJH_fC"},"source":["# @title Transcribe using our function\n","transcription = engine.transcribe(processed_audio)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Oc4HIkMNZs8H"},"source":["f = open(\"transcription.txt\", \"w\")\n","f.write(transcription)\n","f.close()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"on9rNpb1H55c","cellView":"form"},"source":["#@title Trancribe using deepspeech cli\n","!deepspeech --model model/asr-model/deepspeech-0.9.3-models.pbmm --scorer model/asr-model/deepspeech-0.9.3-models.scorer --audio processed_audio.wav >> transcription.txt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"C6eGx0jk5wFh"},"source":["**Storing Transcripted Text from a file to a Variable to feed to NLP Model**"]},{"cell_type":"code","metadata":{"id":"beXBjtnK_t6D"},"source":["f = open(\"transcription.txt\", \"r\")\n","transcription = f.read()\n","f.close()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"stP5VFwl7nU-"},"source":["print(transcription)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WUALtbS47CUS"},"source":["# **Summary Generating Model**"]},{"cell_type":"markdown","metadata":{"id":"jMbrkz5G57Wk"},"source":["**NLP Model Initialisation**"]},{"cell_type":"code","metadata":{"id":"fEtjKp6ftvit"},"source":["tokenizer        = AutoTokenizer.from_pretrained(\"model/nlp-model/tokenizer/\")\n","summarizer_model = AutoModelForSeq2SeqLM.from_pretrained(\"model/nlp-model/model/\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"z-MZ8Yi36ASC"},"source":["**Generating Summary from Text**"]},{"cell_type":"code","metadata":{"id":"roBzHlN2vyEQ"},"source":["number_of_words = len(transcription.split())\n","if (number_of_words < 50):\n","  summary = [transcription]\n","else:\n","  inputs             = tokenizer(transcription,truncation=True,return_tensors='pt')\n","  prediction         = summarizer_model.generate(**inputs)\n","  summary            = tokenizer.batch_decode(prediction,skip_special_tokens=True)\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"KDU5y5ll6szY"},"source":["**Storing Summary in a Text File**"]},{"cell_type":"code","metadata":{"id":"pOI8-bXo2MZ6"},"source":["fp = open(\"summary.txt\",\"w\")\n","fp.write(summary[0])\n","fp.close()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"azCqQMBG71W6"},"source":["print(summary[0])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"QJezvKBOXtdG"},"source":[""],"execution_count":null,"outputs":[]}]}